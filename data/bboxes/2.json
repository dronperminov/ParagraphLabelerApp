{
    "name": "2.jpg",
    "width": 1053,
    "height": 1449,
    "boxes": [
        {
            "bbox": [
                0.4254510921177588,
                0.09937888198757763,
                0.409306742640076,
                0.013112491373360938
            ],
            "text": "12.1. Задача оптимизации Bnepcnektuse 663"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.1414768806073154,
                0.698005698005698,
                0.010351966873706004
            ],
            "text": "встречавшихся; итак, по мере выполнения постепенно находятся все лучшие и луч-"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.15458937198067632,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "шие решения. Суть алгоритма локального поиска заключается в выборе соседских"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.17115251897860592,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "отношений и в формулировке правила выбора соседнего решения на каждом шаге."
        },
        {
            "bbox": [
                0.16429249762583095,
                0.18771566597653555,
                0.671415004748338,
                0.013112491373360938
            ],
            "text": "Итак, соседские отношения можно рассматривать как определяющий (обычно"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.20427881297446515,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "ненаправленный) граф множества всех возможных решений, в котором ребра  "
        },
        {
            "bbox": [
                0.13675213675213677,
                0.22153209109730848,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "соединяют соседние пары решений. В этом случае алгоритм локального поиска.  "
        },
        {
            "bbox": [
                0.13675213675213677,
                0.23740510697032435,
                0.698005698005698,
                0.013112491373360938
            ],
            "text": "может рассматриваться как обход графа с попыткой перемещения в направлении  "
        },
        {
            "bbox": [
                0.13675213675213677,
                0.2581090407177364,
                0.16334283000949668,
                0.00966183574879227
            ],
            "text": "хорошего решения."
        },
        {
            "bbox": [
                0.13580246913580246,
                0.3022774327122153,
                0.6970560303893637,
                0.01725327812284334
            ],
            "text": "Локальный поиск в задаче о вершинном покрытии"
        },
        {
            "bbox": [
                0.13770180436847104,
                0.3305728088336784,
                0.6970560303893637,
                0.012422360248447204
            ],
            "text": "Без конкретной задачи все эти рассуждения выглядят довольно туманно; рассмо-"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.347135955831608,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "трим работу локального поиска на примере задачи о вершинном покрытии. Учтите,"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.3671497584541063,
                0.6989553656220323,
                0.010351966873706004
            ],
            "text": "что задача о вершинном покрытии является хорошим примером, но существует"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.38440303657694963,
                0.6989553656220323,
                0.010351966873706004
            ],
            "text": "много других задач оптимизации, которые с таким же успехом можно использовать"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.40096618357487923,
                0.1671415004748338,
                0.00966183574879227
            ],
            "text": "в качестве примера."
        },
        {
            "bbox": [
                0.16429249762583095,
                0.4147688060731539,
                0.6704653371320038,
                0.012422360248447204
            ],
            "text": "Итак, имеется граф С = (И, Е); множество С возможных решений состоит из"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.4313319530710835,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "всех подмножеств 5 множества И, образующих вершинные покрытия. Например,"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.44858523119392685,
                0.698005698005698,
                0.012422360248447204
            ],
            "text": "всегда выполняется Е С. Стоимость c(S) вершинного покрытия равна его раз-"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.46514837819185645,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "меру; таким образом, минимизация стоимости вершинного покрытия эквивалентна.  "
        },
        {
            "bbox": [
                0.13675213675213677,
                0.4824016563146998,
                0.6989553656220323,
                0.012422360248447204
            ],
            "text": "нахождению покрытия с минимальным размером. Наконец, в наших примерах"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.49827467218771565,
                0.698005698005698,
                0.013112491373360938
            ],
            "text": "алгоритмов локального поиска будет использоваться очень простое соседское от-  "
        },
        {
            "bbox": [
                0.13675213675213677,
                0.515527950310559,
                0.698005698005698,
                0.013112491373360938
            ],
            "text": "ношение: мы говорим, что 5 ~ S’, если решение 5\" может быть получено из 5 добав-"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.5320910973084886,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "лением или удалением одного узла. Таким образом, наши алгоритмы локального,"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.549344375431332,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "поиска будут обходить пространство возможных вершинных покрытий, добавляя"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.5665976535541752,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "или удаляя из текущего решения узел на каждом шаге и пытаясь найти как можно,"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.5859213250517599,
                0.26400759734093066,
                0.00966183574879227
            ],
            "text": "меньшее вершинное покрытие."
        },
        {
            "bbox": [
                0.16429249762583095,
                0.6004140786749482,
                0.5109211775878443,
                0.011042097998619738
            ],
            "text": "этого соседского отношения есть одно полезное свойство:  "
        },
        {
            "bbox": [
                0.16429249762583095,
                0.6204278812974465,
                0.6343779677113011,
                0.013112491373360938
            ],
            "text": "(12.1) Каждое вершинное покрытие имеет не более п соседних решений."
        },
        {
            "bbox": [
                0.16429249762583095,
                0.6418219461697723,
                0.6704653371320038,
                0.013112491373360938
            ],
            "text": "Утверждение доказывается попросту тем, что каждое соседнее решение 5 полу-"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.6576949620427881,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "чается добавлением или удалением узла. Из (12.1) следует, что в процессе выбора."
        },
        {
            "bbox": [
                0.13675213675213677,
                0.6756383712905452,
                0.5868945868945868,
                0.012422360248447204
            ],
            "text": "можно эффективно исследовать все возможные соседние решения 5."
        },
        {
            "bbox": [
                0.16334283000949668,
                0.6922015182884748,
                0.6723646723646723,
                0.012422360248447204
            ],
            "text": "Для начала рассмотрим очень простой алгоритм локального поиска — метод"
        },
        {
            "bbox": [
                0.13580246913580246,
                0.7087646652864045,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "градиентного спуска. Градиентный спуск начинает с полного вершинного покры-"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.7253278122843341,
                0.5735992402659069,
                0.013802622498274672
            ],
            "text": "тия Ги использует следующее правило выбора соседнего решения.  "
        },
        {
            "bbox": [
                0.16429249762583095,
                0.7418909592822637,
                0.671415004748338,
                0.013802622498274672
            ],
            "text": "Обозначим 5 текущее решение. Если существует соседнее решение 5' со строго"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.759144237405107,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "меньшей стоимостью, то выбрать соседа, имеющего как можно меньшую стои-"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.7757073844030365,
                0.48717948717948717,
                0.013802622498274672
            ],
            "text": "мость. В противном случае завершить работу алгоритма."
        },
        {
            "bbox": [
                0.16429249762583095,
                0.7929606625258799,
                0.671415004748338,
                0.012422360248447204
            ],
            "text": "Итак, метод градиентного спуска двигается строго вниз, пока может; когда"
        },
        {
            "bbox": [
                0.13580246913580246,
                0.8095238095238095,
                0.5954415954415955,
                0.011732229123533472
            ],
            "text": "дальнейшее движение становится невозможным, он останавливается."
        },
        {
            "bbox": [
                0.16429249762583095,
                0.8260869565217391,
                0.671415004748338,
                0.013112491373360938
            ],
            "text": "Мы видим, что градиентный спуск завершается точно в тех решениях, которые"
        },
        {
            "bbox": [
                0.13675213675213677,
                0.8426501035196687,
                0.698005698005698,
                0.012422360248447204
            ],
            "text": "являются локальными минимумами: то есть в таких решениях 5, что для всех сосед- "
        },
        {
            "bbox": [
                0.13675213675213677,
                0.8592132505175983,
                0.26495726495726496,
                0.012422360248447204
            ],
            "text": "них 5 выполняется с(5) < с(5."
        },
        {
            "bbox": [
                0.4235517568850902,
                0.8461007591442374,
                0.019943019943019943,
                0.006211180124223602
            ],
            "text": ""
        }
    ]
}