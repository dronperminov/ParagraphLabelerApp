{
    "name": "6.jpg",
    "width": 1053,
    "height": 1449,
    "boxes": [
        {
            "bbox": [
                0.16334283000949668,
                0.09937888198757763,
                0.42450142450142453,
                0.013112491373360938
            ],
            "text": "712 Глава 13. Рандомизированные алгоритмы"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.13802622498274672,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "любой узел 5 © Ги вычисляем минимальный разрез 5— в С' для всех остальных"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.15458937198067632,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "узлов t © У- {5}. Это требует п — 1 вычислений направленного минимального,"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.17115251897860592,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "разреза, лучшим из которых будет глобальный минимальный разрез графа С. ="
        },
        {
            "bbox": [
                0.1908831908831909,
                0.19185645272601795,
                0.671415004748338,
                0.013112491373360938
            ],
            "text": "Алгоритм (13.4) создает сильное впечатление, что нахождение глобального"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.20910973084886128,
                0.6989553656220323,
                0.012422360248447204
            ],
            "text": "минимального разреза в ненаправленном графе в каком-то смысле является более  "
        },
        {
            "bbox": [
                0.16334283000949668,
                0.22567287784679088,
                0.6989553656220323,
                0.012422360248447204
            ],
            "text": "сложной задачей, чем поиск минимального разреза в потоковой сети, так как нам   "
        },
        {
            "bbox": [
                0.16429249762583095,
                0.2422360248447205,
                0.698005698005698,
                0.013112491373360938
            ],
            "text": "приходится — 1 раз вызывать процедуру для решения последней задачи в нашем"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.2587991718426501,
                0.698005698005698,
                0.012422360248447204
            ],
            "text": "методе для решения первой. Но оказывается, это всего лишь иллюзия. Серия все"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.274672187715666,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "более простых алгоритмов, разработанных в конце 1980-х и начале 1990-х годов,"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.2912353347135956,
                0.6885090218423552,
                0.013112491373360938
            ],
            "text": "показала, что глобальные минимальные разрезы в ненаправленных графах могу:"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.3084886128364389,
                0.698005698005698,
                0.012422360248447204
            ],
            "text": "вычисляться так же эффективно, как разрезы st, и даже еще эффективнее, причем   "
        },
        {
            "bbox": [
                0.16334283000949668,
                0.3250517598343685,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "для этого не нужны ни улучшающие пути, ни даже концепция потока. Кульмина-  "
        },
        {
            "bbox": [
                0.16429249762583095,
                0.3409247757073844,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "ционным моментом в этой области стало открытие Дэвидом Каргером 1992 году  "
        },
        {
            "bbox": [
                0.16334283000949668,
                0.357487922705314,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "алгоритма стягивания — рандомизированного метода, качественно более простого"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.37405106970324364,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "по сравнению со всеми предшествующими алгоритмами нахождения глобальных"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.391304347826087,
                0.6970560303893637,
                0.012422360248447204
            ],
            "text": "минимальных разрезов. В самом деле, алгоритм настолько прост, что на первый"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.40717736369910285,
                0.5109211775878443,
                0.013802622498274672
            ],
            "text": "взгляд даже трудно поверить, что он действительно работае'"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.453416149068323,
                0.3114909781576448,
                0.017943409247757072
            ],
            "text": "Разработка алгоритма"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.4824016563146998,
                0.698005698005698,
                0.012422360248447204
            ],
            "text": "(Сейчас мы опишем алгоритм стягивания его простейшей форме. Эта версия, хотя"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.49827467218771565,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "и работает за полиномиальное время, не принадлежит к числу самых эффективных  "
        },
        {
            "bbox": [
                0.16429249762583095,
                0.5148378191856453,
                0.6970560303893637,
                0.013802622498274672
            ],
            "text": "алгоритмов для глобальных минимальных разрезов. Вирочем, последующие опти-"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.5348516218081435,
                0.5745489078822412,
                0.010351966873706004
            ],
            "text": "мизации алгоритма существенно улучшили его время выполнения."
        },
        {
            "bbox": [
                0.1908831908831909,
                0.5479641131815045,
                0.671415004748338,
                0.013112491373360938
            ],
            "text": "Алгоритм стягивания работает со связным мультиграфом = (У, Е); это нена-  "
        },
        {
            "bbox": [
                0.16429249762583095,
                0.5645272601794341,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "правленный граф, который может иметь несколько «параллельных» ребер между"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.5810904071773637,
                0.698005698005698,
                0.013802622498274672
            ],
            "text": "одной парой узлов. Сначала он случайным образом выбирает в С реброе = (и, у)  "
        },
        {
            "bbox": [
                0.16429249762583095,
                0.598343685300207,
                0.6970560303893637,
                0.013112491373360938
            ],
            "text": "и «стягивает» его, как показано на рис. 13.1. В результате появляется новый граф С\","
        },
        {
            "bbox": [
                0.16334283000949668,
                0.6149068322981367,
                0.6989553656220323,
                0.013112491373360938
            ],
            "text": "в котором и у порождают новый узел W; все остальные узлы сохраняют свою ис-"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.6307798481711525,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "ходную «личность». Все ребра, у которых один конец равен и, а другой равен у, уда-"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.6473429951690821,
                0.698005698005698,
                0.013112491373360938
            ],
            "text": "ляются из С\". Все остальные ребра е остаются G’, но если один конец ребра равен  "
        },
        {
            "bbox": [
                0.16334283000949668,
                0.6639061421670117,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "и или ъ, то этот конец заменяется новым узлом w. Обратите внимание: даже если"
        },
        {
            "bbox": [
                0.16334283000949668,
                0.6804692891649413,
                0.6989553656220323,
                0.013802622498274672
            ],
            "text": "в С любые два узла соединены не более чем одним ребром, в С’ могут появиться"
        },
        {
            "bbox": [
                0.16429249762583095,
                0.6970324361628709,
                0.17568850902184235,
                0.013112491373360938
            ],
            "text": "параллельные ребра."
        },
        {
            "bbox": [
                0.24976258309591642,
                0.8688750862663907,
                0.5270655270655271,
                0.010351966873706004
            ],
            "text": "Рис. 13.1. Применение алгоритма стягивания к графу из четырех узлов."
        }
    ]
}